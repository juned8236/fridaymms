{"version":3,"sources":["images/logo.png","component/Input/Input.jsx","component/Input/index.js","component/Input/Input.js","component/Dashboard/Dashboard.jsx","store/actions/auth.js","store/actions/actionTypes.js","component/Dashboard/Dashboard.js","component/Dashboard/index.js","component/Login/Login.jsx","component/Login/Login.js","component/Login/index.js","component/Registration/Registration.jsx","component/Registration/Registration.js","component/Registration/index.js","route/route.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","template","this","props","label","type","id","val","className","placeholder","password1","password2","span","value","onChange","fnChange","bind","name","Input","e","target","fnPrepareData","call","React","Component","onClick","submit","authStart","console","log","authSuccess","token","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","email","password","axios","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","error","Dashboard","connect","state","isAuthenticated","actions","dataObj","errorMessage","errorMessage1","errorMessage2","response","non_field_errors","exact","path","component","to","loading","CircularProgress","color","src","logo","alt","required","htmlFor","href","Login","refresh","window","location","reload","setState","onAuth","prevProps","prevState","first_name","last_name","errorEmail","first_name_error","last_name_error","regis","handleChange","email_link","detail","Registration","event","is_miner","read_only","is_admin","toggle","app","registration","App","onTryAutoSignup","getItem","undefined","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","action","authFail","authLogout","reg_error","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.6a20aa45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f8918331.png\";","import \"./Input.css\";\nimport React from \"react\";\n\nfunction template() {\n  const { label, type, id, val, className, placeholder,password1,password2,span } = this.props\n  return (\n      <div className=\"w-100\">\n        <label>{label}</label>\n        <input id={id} type={type} value={val} className={className} password1={password1} password2= {password2} \n        onChange={this.fnChange.bind(this)}  placeholder={placeholder} name=''/>\n\n         \n      </div>\n  );\n};\n\nexport default template;\n","import Input from \"./Input\";\nexport default Input;\n","import React    from \"react\";\nimport template from \"./Input.jsx\";\n\nclass Input extends React.Component {\n  fnChange(e){\n    // debugger;\n    const {id,value} =e.target;\n    this.props.fnPrepareData(id,value);\n\n  }\n  render() {\n    return template.call(this);\n  }\n}\n\nexport default Input;\n","import \"./Dashboard.css\";\nimport React from \"react\";\n\nfunction template() {\n  return (\n    <div className=\"dashboard\">\n    <button type=\"submit\" className=\"btn btn-green btn-block\" onClick={this.submit.bind(this)}>Logout</button>\n    </div>\n  );\n};\n\nexport default template;\n","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    console.log('start')\n\n    debugger\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    console.log('sucess')\n\n    debugger\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    console.log('fail')\n\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    console.log('logout')\n\n    debugger\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    console.log('authchecktime')\n\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        debugger\n        dispatch(authStart());\n        axios.post('http://localhost:1337/rest-auth/login/', {\n            email: email,\n            password: password\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n\n                dispatch(checkAuthTimeout(3600));\n\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\nexport const registration = email_link => {\n    debugger;\n    return {\n        type: actionTypes.registration,\n        email_link: email_link\n    }\n}\n\nexport const reg_error = regis => {\n    return {\n        type: actionTypes.reg_error,\n        regis: regis\n    }\n}\n\n\n\nexport const authSignup = (first_name, last_name, email, password1, password2, is_miner,is_admin, read_only) => {\n    return dispatch => {\n        dispatch(authStart());\n        debugger;\n\n        axios.post('http://localhost:1337/rest-auth/registration/', {\n            first_name: first_name,\n            last_name: last_name,\n            email: email,\n            password1: password1,\n            password2: password2,\n            is_miner: is_miner,\n            read_only: read_only,\n            is_admin:is_admin\n        })\n            .then(res => {\n                const email_link = res.data;\n                dispatch(registration(email_link))\n                debugger;\n\n\n            })\n            .catch(err => {\n                dispatch(reg_error(err))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    console.log('authcheck')\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT' ;\nexport const registration = 'registration' \nexport const reg_error = 'reg_error' \n\n","import React from \"react\";\nimport template from \"./Dashboard.jsx\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\nclass Dashboard extends React.Component {\n  submit = () => {\n    this.props.logout();\n    \n\n\n  }\n  render() {\n    return template.call(this);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.token,\n    isAuthenticated:state.isAuthenticated\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(actions.logout()),\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import Dashboard from \"./Dashboard\";\nexport default Dashboard;\n","import \"./Login.css\";\nimport React from \"react\";\nimport Input from '../Input/index';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport logo from '../../images/logo.png';\nimport { NavLink } from 'react-router-dom'\nimport Dashboard from '../Dashboard/index'\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction template() {\n  const { email, password } = this.state.dataObj;\n\n  let errorMessage = null;\n  let errorMessage1 = null;\n  let errorMessage2 = null;\n\n  if (this.props.error) {\n    errorMessage = (\n        <p>{this.props.error.response.data.non_field_errors}</p>\n    );\n\n    errorMessage1 = (\n      <span>{this.props.error.response.data.password}</span>\n    );\n    errorMessage2 = (\n      <span>{this.props.error.response.data.email}</span>\n    );\n\n  }\n  if (this.props.isAuthenticated) {\n    console.log(\"isAuthenticated\")\n    return <>\n      <Route >\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Redirect to='/dashboard'></Redirect>\n      </Route></>\n\n  }\n\n  return (\n    <div className='root-login'>\n\n      {this.props.loading ?\n        <CircularProgress color=\"secondary\" /> :\n        <div className=\"admin-entry-section\">\n           \n          <div className=\"inner-admin\">\n\n            <div className=\"container-fluid\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-12 col-md-6 p-0 animated slideInRight\">\n                  <div className=\"inner-section\">\n                    <img src={logo} className=\"logo\" alt=\"\" />\n                    <div className=\"message-conntainer\">\n                      <h2 className=\"text-center\">Welcome back!</h2>\n                      <h4 className=\"text-center\">Please sign in to continue.</h4>\n                    </div>\n                    <p>Don't have an account? <NavLink to=\"/signup\">Create an account</NavLink></p>\n                  </div>\n                </div>\n                <div className=\"col-12 col-md-6 p-0 animated slideInLeft\">\n                  <div className=\"form-section\">\n                    <h2>Sign in</h2>\n                    <form>\n                      <div className=\"row\">\n                        <div className=\"col-12\">\n                          <div className=\"form-group required-alert-box\">\n                          <Input label=\"Email Address\" type='text' className=\"form-control\" id=\"email\" val={email} required placeholder=\"Email Address\" fnPrepareData={this.fnPrepareData} />\n                          {errorMessage2}\n                          </div>\n                        </div>\n                        <div className=\"col-12\">\n                          <div className=\"form-group required-alert-box\">\n                          <Input label=\"Password\" type='password' className=\"form-control\" id=\"password\" val={password} required placeholder=\"Password\" fnPrepareData={this.fnPrepareData} />\n                          {errorMessage1}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      \n                      <div className=\"form-group mb-4\">\n                        <div className=\"row mx-0 justify-content-between align-items-center\">\n                          <span className=\"checkbox-custom\">\n                            <input type=\"checkbox\" name=\"\" id=\"remember\" />\n                            <label htmlFor=\"remember\">Remember me</label>\n                          </span>\n                          <a href=\"/password-reset/\">Forgot password?</a>\n                        </div>\n                      </div>\n                      \n                      <div className=\"form-group mb-3\">\n                        <button type=\"submit\" className=\"btn btn-green btn-block\" onClick={this.submit.bind(this)}>Sign In</button>\n                      </div>\n\n\n                    </form>\n                    \n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n      {(this.props && this.props.error && this.props.error.response && this.props.error.response.data.non_field_errors) &&\n        <div className=\"window-message animated fadeOutRight alert alert-danger\">\n          <h3>Error</h3>\n          <p>{errorMessage}</p>\n        </div>}\n    </div>\n\n  );\n};\n\nexport default template;\n\n","import React from \"react\";\nimport template from \"./Login.jsx\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\n\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      'dataObj': {\n        email: '',\n        password: '',\n\n      },\n    };\n    this.submit = this.submit.bind(this);\n    this.fnPrepareData = this.fnPrepareData.bind(this);\n\n\n\n  }\n  fnPrepareData(key, value) {\n    this.setState({\n      dataObj: {\n        ...this.state.dataObj,\n        [key]: value\n      }\n    })\n  }\n\n  submit() {\n    debugger;\n    this.props.onAuth(this.state.dataObj.email, this.state.dataObj.password);\n }\n\n \n componentDidUpdate(prevProps, prevState) {\n  if (prevState.error !== this.state.error) {\n    this.refresh();\n  }\n}\nrefresh = () => {\n  debugger;\n  window.location.reload(); \n}\n\n  render() {\n    return template.call(this);\n  }\n}\n\nconst mapStateToProps = (state) => {\n\n  return {\n    loading: state.loading,\n    error: state.error,\n    token:state.token,\n    isAuthenticated:state.isAuthenticated,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  debugger\n\n  return {\n    onAuth: (email, password) => dispatch(actions.authLogin(email, password)),\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import Login from \"./Login\";\nexport default Login;\n","import \"../Input/Input.css\";\nimport React from \"react\";\nimport logo from '../../images/logo.png';\nimport { NavLink } from 'react-router-dom'\nimport Input from \"../Input/index\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction template() {\n  const { first_name, last_name, email, password1, password2 } = this.state.dataObj;\n  let errorEmail = null;\n  let first_name_error = null;\n  let last_name_error = null;\n\n  if (this.props.regis) {\n    first_name_error = (\n      <span>{this.props.regis.response.data.first_name}</span>\n    );\n\n    last_name_error = (\n      <span>{this.props.regis.response.data.last_name}</span>\n    );\n\n    errorEmail = (\n      <span>{this.props.regis.response.data.email}</span>\n    );\n  }\n  return (\n    <div className=\"body-container\">\n      {this.props.loading ?\n        <CircularProgress color=\"secondary\" /> :\n        <div className=\"admin-entry-section\">\n          <div className=\"inner-admin\">\n            <div className=\"container-fluid\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-12 col-md-6 p-0 order-md-12 animated slideInLeft\">\n                  <div className=\"inner-section register-section\">\n                    <img src={logo} className=\"logo\" alt=\"\" />\n                    <div className=\"message-conntainer\">\n                      <h2 className=\"text-center\">Get started</h2>\n                      <h4 className=\"text-center\">It's free to signup and only takes a minute.</h4>\n                    </div>\n                    <p>You have an account? <NavLink to=\"/\">Sign In</NavLink></p>\n                  </div>\n                </div>\n                <div className=\"col-12 col-md-6 p-0 animated slideInRight\">\n                  <div className=\"form-section\">\n                    <h2>Sign up</h2>\n\n                   \n                    <form>\n                      <div className=\"row\">\n                        <div className=\"col-12 col-sm-6\">\n                          <div className=\"form-group required-alert-box\">\n                            <Input label=\"First name\" type='text' className=\"form-control\" id=\"first_name\" val={first_name} placeholder=\"First name\" fnPrepareData={this.fnPrepareData} />\n                            <span>{first_name_error}</span>\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6\">\n                          <div className=\"form-group required-alert-box\">\n                            <Input label=\"Last name\" type='text' className=\"form-control\" id=\"last_name\" val={last_name} placeholder=\"Last name\" fnPrepareData={this.fnPrepareData} />\n                            <span>{last_name_error}</span>\n                          </div>\n                        </div>\n                        <div className=\"col-12\">\n                          <div className=\"form-group required-alert-box\">\n                            <Input label=\"Email Address\" type='text' className=\"form-control\" id=\"email\" val={email} placeholder=\"Email Address\" fnPrepareData={this.fnPrepareData} />\n                            <span>{errorEmail}</span>\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-group required-alert-box h-auto mb-0\">\n                            <Input label=\"Password\" type='Password' className=\"form-control\" id=\"password1\" val={password1} placeholder=\"Password\" fnPrepareData={this.fnPrepareData} />\n                            {/* {this.props && this.props.regis && this.props.regis.response.data && this.props.regis.response.data.password1 &&\n                            <span>{this.props.regis.response.data.password1}</span>\n                            } */}\n                          </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6\">\n                          <div className=\"form-group required-alert-box h-auto mb-0\">\n                            <Input label=\"Confirm Password\" type='Password' className=\"form-control\" id=\"password2\" val={password2} placeholder=\"Confirm Password\" fnPrepareData={this.fnPrepareData} />\n                            {/* {this.props && this.props.regis && this.props.regis.response.data && this.props.regis.response.data.password2 &&\n                            <span>{this.props.regis.response.data.password2}</span>\n                            } */}\n                          </div>\n                        </div>\n                      <div className=\"col-12\">\n                        <div className=\"form-group required-alert-box h-auto\">\n                        {this.props && this.props.regis && this.props.regis.response.data && this.props.regis.response.data.password1 &&\n                            <span>{this.props.regis.response.data.password1}</span>\n                            }\n                            {this.props && this.props.regis && this.props.regis.response.data && this.props.regis.response.data.non_field_errors &&\n                            <span>{this.props.regis.response.data.non_field_errors}</span>\n                            }\n                        </div>\n                      </div>\n                      </div>\n\n                      \n\n                      \n\n\n                      <div className=\"form-group required-alert-box\">\n                        <label>Role</label>\n                        <select className=\"form-control\" onChange={this.handleChange}>\n                          <option value=\"\">Select role</option>\n                          <option value=\"True\">Miner</option>\n                          <option value=\"True\">Read Only</option>\n                        </select>\n                      </div>\n                      <div className=\"form-group mb-3\">\n                        <button type=\"submit\" className=\"btn btn-green btn-block\" onClick={this.submit.bind(this)}>Sign Up</button>\n                      </div>\n                      </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n       {(this.props && this.props.email_link && this.props.email_link.detail) &&\n        <div className=\"window-message alert alert-success\">\n          <h3>Thanks for Registration</h3>\n          <p>{this.props.email_link.detail +\": Click on that link to activate Account\"}</p>\n        </div>}\n    </div>\n\n\n\n  );\n};\n\nexport default template;","import React from \"react\";\nimport template from \"./Registration.jsx\";\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux';\n\nclass Registration extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      'dataObj': {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password1: '',\n        password2: '',\n        is_miner: \"False\",\n        read_only: \"False\",\n        is_admin:\"False\"\n      },\n    };\n    this.toggle = this.toggle.bind(this);\n    this.fnPrepareData = this.fnPrepareData.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChange=this.handleChange.bind(this);\n  }\n\n  toggle() {\n    this.props.app(false)\n  }\n\n  fnPrepareData(key, value) {\n    this.setState({\n      dataObj: {\n        ...this.state.dataObj,\n        [key]: value\n      }\n    })\n  }\n  handleChange = (event) => {\n   \n    if (event.target.value === \"is_miner\") {\n      this.setState({\n        dataObj: {\n          ...this.state.dataObj,\n          \"is_miner\": event.target.value\n        }\n      })\n    }\n    if (event.target.value === \"read_only\") {\n      this.setState({\n        dataObj: {\n          ...this.state.dataObj,\n          \"read_only\": event.target.value\n        }\n      })\n    }\n  };\n  submit() {\n    this.props.onAuth(\n      this.state.dataObj.first_name,\n      this.state.dataObj.last_name,\n      this.state.dataObj.email,\n      this.state.dataObj.password1,\n      this.state.dataObj.password2,\n      this.state.dataObj.is_miner,\n      this.state.dataObj.read_only,\n      this.state.dataObj.is_admin\n\n       )\n\n  }\n \n \n  render() {\n    return template.call(this);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    regis:state.regis,\n    email_link:state.email_link\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (first_name\n      ,last_name,email,\n      password1,\n      password2,\n      is_admin,\n      is_miner,\n      read_only) => dispatch(actions.authSignup(first_name,\n        last_name,email,password1,password2,is_miner,read_only,is_admin))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","import Registration from \"./Registration\";\nexport default Registration;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Login from '../component/Login/index';\nimport Registration from \"../component/Registration\";\nimport Dashboard from '../component/Dashboard/index';\n\nconst BaseRouter = (...props) => (\n  <div>\n\n    <Route exact path=\"/signup/\" component={Registration} />\n    <Route exact path=\"/\" component={Login} />      \n    <Route exact path=\"/dashboard\" component={Dashboard} />\n    \n  </div>\n);\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps)(BaseRouter);","import React,{Component} from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './route/route';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/auth';\n\nclass App extends Component {\n \ncomponentDidMount() {\n  this.props.onTryAutoSignup();\n}\n  render() {\n    return (\n      <div>\n        <Router>\n          <BaseRouter />\n        </Router>\n      </div>\n    );\n  }\n}\n\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    error: null, \n    loading: false,\n    regis:null,\n    email_link:null,\n    isAuthenticated:false\n    \n}\n\nconst authStart = (state, action) => {\n    debugger\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    debugger\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false,\n        isAuthenticated:true\n    });\n\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst registration = (state, action) => {\n    return updateObject(state, {\n        email_link: action.email_link,\n        error: null,\n        loading: false\n    });\n}\n\nconst reg_error = (state, action) => {\n    return updateObject(state, {\n        regis: action.regis,\n        loading: false\n    });\n}\n\nconst reducer = (state=initialState, action) => {\n    debugger\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.registration: return registration(state, action);\n        case actionTypes.reg_error: return reg_error(state, action);\n\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../src/css/animate.css';\nimport '../src/css/bootstrap.min.css';\nimport '../src/css/icofont.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/auth';\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}