{"version":3,"sources":["images/logo.png","component/Input/Input.jsx","component/Input/index.js","component/Input/Input.js","component/Registration/Registration.jsx","store/actions/auth.js","store/actions/actionTypes.js","component/Registration/Registration.js","component/Registration/index.js","component/Dashboard/Dashboard.jsx","component/Dashboard/index.js","component/Dashboard/Dashboard.js","component/Login/Login.jsx","component/Login/Login.js","component/Login/index.js","route/route.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","template","this","props","label","type","id","val","className","placeholder","password1","password2","required","value","onChange","fnChange","bind","name","Input","e","target","fnPrepareData","call","React","Component","state","dataObj","first_name","last_name","email","errorMessage","errorMessage1","errorMessage2","errorMessage3","sucess","email_link","detail","regis","response","data","non_field_errors","loading","CircularProgress","color","src","logo","alt","to","style","padding","margin","border","handleChange","onClick","submit","authSuccess","token","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","Registration","event","console","log","setState","is_admin","is_miner","read_only","toggle","app","key","onAuth","connect","error","axios","post","then","res","registration","catch","err","actions","Dashboard","password","htmlFor","href","Login","history","push","expirationDate","Date","getTime","setItem","BaseRouter","exact","path","component","App","callbackFunction","childData","title","callbackFunction1","onTryAutoSignup","isAuthenticated","getItem","undefined","Boolean","window","location","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","authFail","authLogout","reg_error","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.3cc4e3eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f8918331.png\";","import \"./Input.css\";\nimport React from \"react\";\n\nfunction template() {\n  const { label, type, id, val, className, placeholder,password1,password2, required } = this.props\n  return (\n      <div className=\"form-group required-alert-box\">\n        <label>{label}</label>\n        <input id={id} type={type} value={val} className={className} password1={password1} password2= {password2} \n        onChange={this.fnChange.bind(this)}  required ={required} placeholder={placeholder} name=''/>\n      </div>\n  );\n};\n\nexport default template;\n","import Input from \"./Input\";\nexport default Input;\n","import React    from \"react\";\nimport template from \"./Input.jsx\";\n\nclass Input extends React.Component {\n  fnChange(e){\n    // debugger;\n    const {id,value} =e.target;\n    this.props.fnPrepareData(id,value);\n\n  }\n  render() {\n    return template.call(this);\n  }\n}\n\nexport default Input;\n","import \"../Input/Input.css\";\nimport React from \"react\";\nimport logo from '../../images/logo.png';\nimport { NavLink } from 'react-router-dom'\nimport Input from \"../Input/index\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction template() {\n  const { first_name, last_name, email, password1, password2 } = this.state.dataObj;\n  let errorMessage = null;\n  let errorMessage1 = null;\n  let errorMessage2 = null;\n  let errorMessage3 = null;\n  let sucess = null;\n\n  if (this.props.email_link) {\n    sucess = (\n      <p>Click on link to activate Account :{this.props.email_link.detail}</p>\n    )\n  }\n\n  if (this.props.regis) {\n    errorMessage = (\n      <p>{this.props.regis.response.data.email}</p>\n    );\n    errorMessage1 = (\n      <p> {this.props.regis.response.data.password1}</p>\n    );\n    errorMessage2 = (\n      <p>{this.props.regis.response.data.password2}</p>\n    );\n    errorMessage3 = (\n      <p>{this.props.regis.response.data.non_field_errors}</p>\n    );\n\n  }\n  return (\n    <div>\n      {this.props.loading ?\n        <CircularProgress color=\"secondary\" /> :\n        <div className=\"admin-entry-section\">\n          <div className=\"inner-admin\">\n            <div className=\"container-fluid\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-12 col-md-6 p-0 order-md-12 animated slideInLeft\">\n                  <div className=\"inner-section register-section\">\n                    <img src={logo} className=\"logo\" alt=\"\" />\n                    <div className=\"message-conntainer\">\n                      <h2 className=\"text-center\">Get started</h2>\n                      <h4 className=\"text-center\">It's free to signup and only takes a minute.</h4>\n                    </div>\n                    <p>You have an account?\n              <NavLink to=\"/login\">Sign In</NavLink></p>\n                  </div>\n                </div>\n                <div className=\"col-12 col-md-6 p-0 animated slideInRight\">\n                  <div className=\"form-section\">\n                    <h2>Sign up</h2>\n                    <div className=\"alert alert-warning\" style={{ padding: 0, margin: 0, border: 0 }}>\n                      {errorMessage1}\n                      {sucess}\n                    </div>\n                    <form>\n                      <div className=\"row\">\n                        <div className=\"col-12 col-sm-6\">\n                          <Input label=\"First name\" type='text' className=\"form-control\" id=\"first_name\" val={first_name} placeholder=\"First name\" fnPrepareData={this.fnPrepareData} />\n                        </div>\n                        <div className=\"col-12 col-sm-6\">\n                          <Input label=\"Last name\" type='text' className=\"form-control\" id=\"last_name\" val={last_name} placeholder=\"Last name\" fnPrepareData={this.fnPrepareData} />\n                        </div>\n                      </div>\n                      <div className=\"alert alert-warning\" style={{ padding: 0, margin: 0, border: 0 }}>\n                        {errorMessage}\n                      </div>\n                      <Input label=\"Email Address\" type='text' className=\"form-control\" id=\"email\" val={email} placeholder=\"Email Address\" fnPrepareData={this.fnPrepareData} />\n                      <div className=\"row\">\n                        <div className=\"col-12 col-sm-6\">\n                          <div className=\"alert alert-warning\" style={{ padding: 0, margin: 0, border: 0 }}>\n                            {errorMessage2}\n                            {errorMessage3}\n                          </div>\n                          <Input label=\"Password\" type='Password' className=\"form-control\" id=\"password1\" val={password1} placeholder=\"Password\" fnPrepareData={this.fnPrepareData} />\n                        </div>\n                        <div className=\"col-12 col-sm-6\">\n                          <Input label=\"Confirm Password\" type='Password' className=\"form-control\" id=\"password2\" val={password2} placeholder=\"Confirm Password\" fnPrepareData={this.fnPrepareData} />\n                        </div>\n                      </div>\n                      <div className=\"form-group required-alert-box\">\n                        <label>Role</label>\n                        <select className=\"form-control\" name=\"mySelect\" onChange={this.handleChange}>\n                          <option value=\"\">Select role</option>\n                          <option value=\"is_admin\">Admin</option>\n                          <option value=\"is_miner\">Miner</option>\n                          <option value=\"read_only\">Read Only</option>\n                        </select>\n                        {/* <span style=\"display: none\">This field is required</span> */}\n                      </div>\n                      <div className=\"form-group mb-3\">\n                        <button type=\"submit\" className=\"btn btn-green btn-block\" onClick={this.submit.bind(this)}>Sign Up</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n\n    </div>\n\n\n\n  );\n};\n\nexport default template;\n","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            email: email,\n            password: password\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\nexport const registration = email_link => {\n    debugger;\n    return {\n        type: actionTypes.registration,\n        email_link: email_link\n    }\n}\n\nexport const reg_error = regis => {\n    return {\n        type: actionTypes.reg_error,\n        regis: regis\n    }\n}\n\nexport const authSignup = (first_name, last_name, email, password1, password2, is_admin, is_miner, read_only) => {\n    return dispatch => {\n        dispatch(authStart());\n        debugger;\n\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            first_name: first_name,\n            last_name: last_name,\n            email: email,\n            password1: password1,\n            password2: password2,\n            is_admin: is_admin,\n            is_miner: is_miner,\n            read_only: read_only\n        })\n            .then(res => {\n                const email_link = res.data;\n                dispatch(registration(email_link))\n                debugger;\n\n\n            })\n            .catch(err => {\n                dispatch(reg_error(err))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT' ;\nexport const registration = 'registration' \nexport const reg_error = 'reg_error' \n\n","import React from \"react\";\nimport template from \"./Registration.jsx\";\nimport ServerCall from '../services/serverCall';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux';\n\nclass Registration extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      'dataObj': {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password1: '',\n        password2: '',\n        is_admin: \"\",\n        is_miner: \"\",\n        read_only: \"\"\n      },\n    };\n    this.toggle = this.toggle.bind(this);\n    this.fnPrepareData = this.fnPrepareData.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  toggle() {\n    this.props.app(false)\n  }\n\n  fnPrepareData(key, value) {\n    this.setState({\n      dataObj: {\n        ...this.state.dataObj,\n        [key]: value\n      }\n    })\n  }\n  handleChange = (event) => {\n    console.log(event)\n    if (event.target.value === \"is_admin\") {\n      this.setState({\n        dataObj: {\n          ...this.state.dataObj,\n          \"is_admin\": event.target.value\n        }\n      })\n    }\n    if (event.target.value === \"is_miner\") {\n      this.setState({\n        dataObj: {\n          ...this.state.dataObj,\n          \"is_miner\": event.target.value\n        }\n      })\n    }if (event.target.value === \"read_only\") {\n      this.setState({\n        dataObj: {\n          ...this.state.dataObj,\n          \"read_only\": event.target.value\n        }\n      })\n    }\n  };\n  submit() {\n    this.props.onAuth(\n      this.state.dataObj.first_name,\n      this.state.dataObj.last_name,\n      this.state.dataObj.email,\n      this.state.dataObj.password1,\n      this.state.dataObj.password2,\n      this.state.dataObj.is_admin,\n      this.state.dataObj.is_miner,\n      this.state.dataObj.read_only\n       )\n    //   ServerCall.fnPostReg('http://localhost:8000/rest-auth/std-registration',this.state.dataObj)\n    //  .then(\n    //    (res)=>{\n    //      debugger;\n    //     if (res.data && res.data.rowCount){\n    //       this.fnGetStudetns();\n    //       this.setState({\n    //         'msg':'Registered Sucessfully',\n    //         'dataObj': {\n    //           name: '',\n    //       rno: '',\n    //       email: '',\n    //       loc: ''\n    //         }\n    //       })\n    //     }else {\n    //       this.setState({\n    //         'msg':'fail'\n    //       })\n    //     }\n    //     }\n    //  )\n    //  .catch(\n    //    ()=>{\n    //      debugger;\n    //    }\n    //  )\n  }\n  render() {\n    return template.call(this);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    regis:state.regis,\n    email_link:state.email_link\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (first_name\n      ,last_name,email,\n      password1,\n      password2,\n      is_admin,\n      is_miner,\n      read_only) => dispatch(actions.authSignup(first_name,\n        last_name,email,password1,password2,is_admin,is_miner,read_only))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","import Registration from \"./Registration\";\nexport default Registration;\n","import \"./Dashboard.css\";\nimport React from \"react\";\n\nfunction template() {\n  return (\n    <div className=\"dashboard\">\n      <h1>Dashboard</h1>\n    </div>\n  );\n};\n\nexport default template;\n","import Dashboard from \"./Dashboard\";\nexport default Dashboard;\n","import React    from \"react\";\nimport template from \"./Dashboard.jsx\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return template.call(this);\n  }\n}\n\nexport default Dashboard;\n","import \"./Login.css\";\nimport React from \"react\";\nimport Input from '../Input/index';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport logo from '../../images/logo.png';\nimport { NavLink } from 'react-router-dom'\nimport Login from \"./Login\";\nimport Dashboard from '../Dashboard/index'\n\nfunction template() {\n  const { email, password } = this.state.dataObj;\n\n  let errorMessage = null;\n  let errorMessage1 = null;\n  let errorMessage2 = null;\n\n  if (this.props.error) {\n    errorMessage = (\n      <p>{this.props.error.response.data.non_field_errors}</p>\n    );\n\n    errorMessage1 = (\n      <p>{this.props.error.response.data.password}</p>\n    );\n    errorMessage2 = (\n      <p>{this.props.error.response.data.email}</p>\n    );\n\n  }\n  \n  return (\n    <div>    \n      {this.props.loading ?\n        <CircularProgress color=\"secondary\" /> :\n        <div className=\"admin-entry-section\">\n         \n          <div className=\"inner-admin\">\n            <div className=\"container-fluid\">\n              <div className=\"row align-items-center\">\n                <div className=\"col-12 col-md-6 p-0 animated slideInRight\">\n                  <div className=\"inner-section\">\n                    <img src={logo} className=\"logo\" alt=\"\" />\n                    <div className=\"message-conntainer\">\n                      <h2 className=\"text-center\">Welcome back!</h2>\n                      <h4 className=\"text-center\">Please sign in to continue.</h4>\n                    </div>\n                    <p>Don't have an account? <NavLink to=\"/\">Create an account</NavLink></p>\n                  </div>\n                </div>\n                <div className=\"col-12 col-md-6 p-0 animated slideInLeft\">\n                  <div className=\"form-section\">\n                    <h2>Sign in</h2>\n                    <div className=\"alert alert-warning\" style={{ padding: 0, margin: 0, border: 0 }}>\n        {errorMessage}\n\n        {errorMessage1}\n        {errorMessage2}\n      </div>\n                    <form>\n                      <Input label=\"Email Address\" type='text' className=\"form-control\" id=\"email\" val={email} required=\"required\" placeholder=\"Email Address\" fnPrepareData={this.fnPrepareData} />\n                      <Input label=\"Password\" type='password' className=\"form-control\" id=\"password\" val={password} required  placeholder=\"Password\" fnPrepareData={this.fnPrepareData} />\n                      <div className=\"form-group mb-4\">\n                        <div className=\"row mx-0 justify-content-between align-items-center\">\n                          <span className=\"checkbox-custom\">\n                            <input type=\"checkbox\" name=\"\" id=\"remember\" />\n                            <label htmlFor=\"remember\">Remember me</label>\n                          </span>\n                          <a href=\"reset-password.html\">Forgot password?</a>\n                        </div>\n                      </div>\n                      <div className=\"form-group mb-3\">\n                        <button type=\"submit\" className=\"btn btn-green btn-block\" onClick={this.submit.bind(this)}>Sign In</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n\n  );\n};\n\nexport default template;\n","import React from \"react\";\nimport template from \"./Login.jsx\";\nimport ServerCall from \"../services/serverCall\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\n\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      'dataObj': {\n        email: '',\n        password: '',\n\n      },\n    };\n    this.submit = this.submit.bind(this);\n    this.fnPrepareData = this.fnPrepareData.bind(this);\n\n  }\n  fnPrepareData(key, value) {\n    this.setState({\n      dataObj: {\n        ...this.state.dataObj,\n        [key]: value\n      }\n    })\n  }\n\n  submit() {\n    this.props.onAuth(this.state.dataObj.email, this.state.dataObj.password);\n    if(this.props.token){\n      this.props.history.push('/dashboard');\n    }\n\n  }\n\n  render() {\n    return template.call(this);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    token:state.token\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.authLogin(email, password)),\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import Login from \"./Login\";\nexport default Login;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Login from '../component/Login/index';\nimport Registration from \"../component/Registration\";\nimport Dashboard from '../component/Dashboard/index';\nconst BaseRouter = () => (\n  <div>\n    {/* <Route exact path=\"/\" component={ArticleList} />{\" \"}\n    <Route exact path=\"/articles/:articleID/\" component={ArticleDetail} />{\" \"} */}\n    <Route exact path=\"/\" component={Registration} />\n    <Route exact path=\"/login/\" component={Login} />\n    <Route exact path=\"/dashboard/\" component={Dashboard} />\n\n  </div>\n);\n\nexport default BaseRouter;","import React,{Component} from 'react';\nimport Registration from './component/Registration/index';\nimport Login from './component/Login/index'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './route/route';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/auth';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n        title:true\n     }\n  }\n  callbackFunction = (childData) => {\n    this.setState({title: childData})\n}\ncallbackFunction1 = (childData) => {\n  debugger;;\n  this.setState({title: childData})\n}\ncomponentDidMount() {\n  this.props.onTryAutoSignup();\n}\n  render() {\n    const { title } = this.state;\n    return (\n      <div>\n        <Router>\n          {/* { title ? <Registration app ={this.callbackFunction}  {...this.props} /> : <Login app ={this.callbackFunction1} {...this.props}/>} */}\n          <BaseRouter />\n        </Router>\n      </div>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    error: null, \n    loading: false,\n    regis:null,\n    email_link:null\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst registration = (state, action) => {\n    return updateObject(state, {\n        email_link: action.email_link,\n        error: null,\n        loading: false\n    });\n    debugger;\n}\n\nconst reg_error = (state, action) => {\n    return updateObject(state, {\n        regis: action.regis,\n        loading: false\n    });\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.registration: return registration(state, action);\n        case actionTypes.reg_error: return reg_error(state, action);\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../src/css/animate.css';\nimport '../src/css/bootstrap.min.css';\nimport '../src/css/icofont.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/auth';\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}